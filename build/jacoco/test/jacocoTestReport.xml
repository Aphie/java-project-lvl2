<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="app"><sessioninfo id="CSPBNTB3026-30965435" start="1661854779273" dump="1661854782623"/><package name="hexlet/code"><class name="hexlet/code/Differ" sourcefilename="Differ.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="52" covered="159"/><counter type="BRANCH" missed="14" covered="14"/><counter type="LINE" missed="9" covered="30"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="159"/><counter type="BRANCH" missed="14" covered="14"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser$1" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="hexlet/code/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getData" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;" line="13"><counter type="INSTRUCTION" missed="29" covered="44"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="44"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/App" sourcefilename="App.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Formatter" sourcefilename="Formatter.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toFormate" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="App.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Parser.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="1" cb="1"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="8" ci="1" mb="2" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="22" mi="11" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="44"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Formatter.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="1" cb="1"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="10" mb="0" cb="2"/><line nr="15" mi="0" ci="4" mb="0" cb="2"/><line nr="16" mi="0" ci="12" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="52"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Differ.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="2" cb="2"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="8" ci="0" mb="4" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="26" mi="8" ci="0" mb="4" cb="0"/><line nr="27" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="2"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="1" cb="1"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="1" cb="1"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="1" cb="1"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="1" cb="1"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="159"/><counter type="BRANCH" missed="14" covered="14"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="108" covered="283"/><counter type="BRANCH" missed="18" covered="24"/><counter type="LINE" missed="20" covered="58"/><counter type="COMPLEXITY" missed="18" covered="14"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="1" covered="4"/></package><counter type="INSTRUCTION" missed="108" covered="283"/><counter type="BRANCH" missed="18" covered="24"/><counter type="LINE" missed="20" covered="58"/><counter type="COMPLEXITY" missed="18" covered="14"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="1" covered="4"/></report>